<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="53" passed="49" failed="0" skipped="4">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-20T15:44:09 IST" name="Default suite" finished-at="2023-04-20T15:46:50 IST" duration-ms="160261">
    <groups>
    </groups>
    <test started-at="2023-04-20T15:44:09 IST" name="Default test" finished-at="2023-04-20T15:46:50 IST" duration-ms="160261">
      <class name="org.test.ProductModule">
        <test-method is-config="true" signature="setup()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:09 IST" name="setup" finished-at="2023-04-20T15:44:11 IST" duration-ms="2113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:11 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:44:11 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="loginPage()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:11 IST" name="loginPage" finished-at="2023-04-20T15:44:52 IST" duration-ms="40083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPage -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:52 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:44:52 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:52 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:44:52 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="settingModule()[pri:1, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:52 IST" name="settingModule" finished-at="2023-04-20T15:44:54 IST" duration-ms="2380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- settingModule -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:54 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:44:54 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:54 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:44:54 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="createFormLabel()[pri:2, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:54 IST" name="createFormLabel" finished-at="2023-04-20T15:44:56 IST" duration-ms="1568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createFormLabel -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:56 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:44:56 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:56 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:44:56 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="mandatoryValidationProductName()[pri:3, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:56 IST" name="mandatoryValidationProductName" finished-at="2023-04-20T15:44:56 IST" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mandatoryValidationProductName -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:56 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:44:56 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:56 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:44:56 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="mandatoryValidationDescription()[pri:4, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:56 IST" name="mandatoryValidationDescription" finished-at="2023-04-20T15:44:56 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mandatoryValidationDescription -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:56 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:44:56 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:56 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:44:56 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="mandatoryValidationPrice()[pri:5, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:56 IST" name="mandatoryValidationPrice" finished-at="2023-04-20T15:44:56 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mandatoryValidationPrice -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:56 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:44:56 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:56 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:44:56 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="mandatoryValidationTaxName()[pri:6, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:56 IST" name="mandatoryValidationTaxName" finished-at="2023-04-20T15:44:57 IST" duration-ms="757" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mandatoryValidationTaxName -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:57 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:44:57 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:57 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:44:57 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="mandatoryValidationTaxPercentage()[pri:7, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:57 IST" name="mandatoryValidationTaxPercentage" finished-at="2023-04-20T15:44:57 IST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mandatoryValidationTaxPercentage -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:57 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:44:57 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:57 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:44:57 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="maximumValidationProductName()[pri:8, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:44:57 IST" name="maximumValidationProductName" finished-at="2023-04-20T15:45:00 IST" duration-ms="3413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maximumValidationProductName -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:00 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:00 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:00 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:00 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="maximumValidationSKU()[pri:9, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:00 IST" name="maximumValidationSKU" finished-at="2023-04-20T15:45:01 IST" duration-ms="540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maximumValidationSKU -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:01 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:01 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:01 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:01 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="maximumValidationDescription()[pri:10, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:01 IST" name="maximumValidationDescription" finished-at="2023-04-20T15:45:04 IST" duration-ms="2856" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maximumValidationDescription -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:04 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:04 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:04 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:04 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="maximumValidationPrice()[pri:11, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:04 IST" name="maximumValidationPrice" finished-at="2023-04-20T15:45:04 IST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maximumValidationPrice -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:04 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:04 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:04 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:04 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="beforeDecimalPointPriceField()[pri:12, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:04 IST" name="beforeDecimalPointPriceField" finished-at="2023-04-20T15:45:04 IST" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeDecimalPointPriceField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:04 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:04 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:04 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:04 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="afterDecimalPointPriceField()[pri:13, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:04 IST" name="afterDecimalPointPriceField" finished-at="2023-04-20T15:45:04 IST" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterDecimalPointPriceField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:04 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:04 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:04 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:04 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="maximumValidationTax()[pri:14, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:04 IST" name="maximumValidationTax" finished-at="2023-04-20T15:45:05 IST" duration-ms="913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maximumValidationTax -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:05 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:05 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:05 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:05 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="beforeDecimalPointTaxPercentageField()[pri:15, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:05 IST" name="beforeDecimalPointTaxPercentageField" finished-at="2023-04-20T15:45:06 IST" duration-ms="308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeDecimalPointTaxPercentageField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:06 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:06 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="afterDecimalPointTaxPercentageField()[pri:16, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="afterDecimalPointTaxPercentageField" finished-at="2023-04-20T15:45:06 IST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterDecimalPointTaxPercentageField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:06 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:06 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="maximumValidationQuantityHand()[pri:17, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="maximumValidationQuantityHand" finished-at="2023-04-20T15:45:06 IST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maximumValidationQuantityHand -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:06 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:06 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="beforeDecimalPointQuantityHandField()[pri:18, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="beforeDecimalPointQuantityHandField" finished-at="2023-04-20T15:45:06 IST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeDecimalPointQuantityHandField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:06 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:06 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="afterDecimalPointQuantityHandField()[pri:19, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="afterDecimalPointQuantityHandField" finished-at="2023-04-20T15:45:06 IST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterDecimalPointQuantityHandField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:06 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:06 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="maximumValidationLowStockThresold()[pri:20, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:06 IST" name="maximumValidationLowStockThresold" finished-at="2023-04-20T15:45:07 IST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maximumValidationLowStockThresold -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:07 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:07 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:07 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:07 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="beforeDecimalPointLowStockThresoldField()[pri:21, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:07 IST" name="beforeDecimalPointLowStockThresoldField" finished-at="2023-04-20T15:45:07 IST" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeDecimalPointLowStockThresoldField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:07 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:07 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:07 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:07 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="afterDecimalPointLowStockThresoldField()[pri:22, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:07 IST" name="afterDecimalPointLowStockThresoldField" finished-at="2023-04-20T15:45:07 IST" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterDecimalPointLowStockThresoldField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:07 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:07 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:07 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:07 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="createButton()[pri:23, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:07 IST" name="createButton" finished-at="2023-04-20T15:45:07 IST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createButton -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:07 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:07 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:07 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:07 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="createProduct()[pri:24, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:07 IST" name="createProduct" finished-at="2023-04-20T15:45:16 IST" duration-ms="8198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProduct -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:16 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:16 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:16 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:16 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editFormLabel()[pri:25, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:16 IST" name="editFormLabel" finished-at="2023-04-20T15:45:20 IST" duration-ms="4079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editFormLabel -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:20 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:20 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editmandatoryValidationProductName()[pri:26, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="editmandatoryValidationProductName" finished-at="2023-04-20T15:45:20 IST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editmandatoryValidationProductName -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:20 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:20 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editmandatoryValidationDescription()[pri:27, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="editmandatoryValidationDescription" finished-at="2023-04-20T15:45:20 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editmandatoryValidationDescription -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:20 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:20 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editmandatoryValidationPrice()[pri:28, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="editmandatoryValidationPrice" finished-at="2023-04-20T15:45:20 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editmandatoryValidationPrice -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:20 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:20 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editmandatoryValidationTaxName()[pri:29, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="editmandatoryValidationTaxName" finished-at="2023-04-20T15:45:20 IST" duration-ms="1" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping / Ignoring - Script not Ready for Execution ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping / Ignoring - Script not Ready for Execution 
at org.test.ProductModule.editmandatoryValidationTaxName(ProductModule.java:745)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editmandatoryValidationTaxName -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:20 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:20 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editmandatoryValidationTaxPercentage()[pri:30, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="editmandatoryValidationTaxPercentage" finished-at="2023-04-20T15:45:20 IST" duration-ms="1" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping / Ignoring - Script not Ready for Execution ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping / Ignoring - Script not Ready for Execution 
at org.test.ProductModule.editmandatoryValidationTaxPercentage(ProductModule.java:772)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editmandatoryValidationTaxPercentage -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:20 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:20 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editmaximumValidationProductName()[pri:31, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:20 IST" name="editmaximumValidationProductName" finished-at="2023-04-20T15:45:24 IST" duration-ms="3598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editmaximumValidationProductName -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:24 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:24 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:24 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:24 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editmaximumValidationSKU()[pri:32, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:24 IST" name="editmaximumValidationSKU" finished-at="2023-04-20T15:45:24 IST" duration-ms="532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editmaximumValidationSKU -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:24 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:24 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:24 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:24 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editmaximumValidationDescription()[pri:33, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:24 IST" name="editmaximumValidationDescription" finished-at="2023-04-20T15:45:27 IST" duration-ms="2962" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editmaximumValidationDescription -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:27 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:27 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:27 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:27 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editmaximumValidationPrice()[pri:34, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:27 IST" name="editmaximumValidationPrice" finished-at="2023-04-20T15:45:27 IST" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editmaximumValidationPrice -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:27 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:27 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:27 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:27 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editbeforeDecimalPointPriceField()[pri:35, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:27 IST" name="editbeforeDecimalPointPriceField" finished-at="2023-04-20T15:45:28 IST" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editbeforeDecimalPointPriceField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:28 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:28 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editafterDecimalPointPriceField()[pri:36, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="editafterDecimalPointPriceField" finished-at="2023-04-20T15:45:28 IST" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editafterDecimalPointPriceField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:28 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:28 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:28 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method signature="editbeforeDecimalPointTaxPercentageField()[pri:38, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="editbeforeDecimalPointTaxPercentageField" finished-at="2023-04-20T15:45:28 IST" duration-ms="0" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping / Ignoring - Script not Ready for Execution ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping / Ignoring - Script not Ready for Execution 
at org.test.ProductModule.editbeforeDecimalPointTaxPercentageField(ProductModule.java:973)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editbeforeDecimalPointTaxPercentageField -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:28 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editafterDecimalPointTaxPercentageField()[pri:39, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="editafterDecimalPointTaxPercentageField" finished-at="2023-04-20T15:45:28 IST" duration-ms="2" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping / Ignoring - Script not Ready for Execution ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping / Ignoring - Script not Ready for Execution 
at org.test.ProductModule.editafterDecimalPointTaxPercentageField(ProductModule.java:1002)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editafterDecimalPointTaxPercentageField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:28 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:28 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editmaximumValidationQuantityHand()[pri:40, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="editmaximumValidationQuantityHand" finished-at="2023-04-20T15:45:28 IST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editmaximumValidationQuantityHand -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:28 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:28 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editbeforeDecimalPointQuantityHandField()[pri:41, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="editbeforeDecimalPointQuantityHandField" finished-at="2023-04-20T15:45:28 IST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editbeforeDecimalPointQuantityHandField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:28 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:28 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editafterDecimalPointQuantityHandField()[pri:42, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="editafterDecimalPointQuantityHandField" finished-at="2023-04-20T15:45:28 IST" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editafterDecimalPointQuantityHandField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:28 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:28 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editmaximumValidationLowStockThresold()[pri:43, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:28 IST" name="editmaximumValidationLowStockThresold" finished-at="2023-04-20T15:45:29 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editmaximumValidationLowStockThresold -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:29 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:29 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:29 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:29 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editbeforeDecimalPointLowStockThresoldField()[pri:44, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:29 IST" name="editbeforeDecimalPointLowStockThresoldField" finished-at="2023-04-20T15:45:29 IST" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editbeforeDecimalPointLowStockThresoldField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:29 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:29 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:29 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:29 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="editafterDecimalPointLowStockThresoldField()[pri:45, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:29 IST" name="editafterDecimalPointLowStockThresoldField" finished-at="2023-04-20T15:45:29 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editafterDecimalPointLowStockThresoldField -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:29 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:29 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:29 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:29 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="updateButton()[pri:46, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:29 IST" name="updateButton" finished-at="2023-04-20T15:45:29 IST" duration-ms="267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateButton -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:29 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:29 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:29 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:29 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="updateProduct()[pri:47, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:29 IST" name="updateProduct" finished-at="2023-04-20T15:45:37 IST" duration-ms="8056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateProduct -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:37 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:37 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:37 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:37 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="searchProductName()[pri:48, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:37 IST" name="searchProductName" finished-at="2023-04-20T15:45:38 IST" duration-ms="1258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchProductName -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:38 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:38 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:38 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:38 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="searchInvalid()[pri:49, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:38 IST" name="searchInvalid" finished-at="2023-04-20T15:45:40 IST" duration-ms="1317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchInvalid -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:40 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:40 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:40 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:40 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="deletedProduct()[pri:50, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:40 IST" name="deletedProduct" finished-at="2023-04-20T15:45:57 IST" duration-ms="17136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletedProduct -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:57 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:45:57 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:57 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:45:57 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="reflectQuotePage()[pri:51, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:45:57 IST" name="reflectQuotePage" finished-at="2023-04-20T15:46:24 IST" duration-ms="27344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reflectQuotePage -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:46:24 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:46:24 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:46:24 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:46:24 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="inactiveProduct()[pri:52, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:46:24 IST" name="inactiveProduct" finished-at="2023-04-20T15:46:41 IST" duration-ms="16322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inactiveProduct -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:46:41 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:46:41 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="deleteBeforeCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:46:41 IST" name="deleteBeforeCatch" finished-at="2023-04-20T15:46:41 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBeforeCatch -->
        <test-method signature="deleteProduct()[pri:53, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:46:41 IST" name="deleteProduct" finished-at="2023-04-20T15:46:49 IST" duration-ms="8473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteProduct -->
        <test-method is-config="true" signature="deleteAfterCatch()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:46:49 IST" name="deleteAfterCatch" finished-at="2023-04-20T15:46:49 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAfterCatch -->
        <test-method is-config="true" signature="exitBrowser()[pri:0, instance:org.test.ProductModule@2ea41516]" started-at="2023-04-20T15:46:49 IST" name="exitBrowser" finished-at="2023-04-20T15:46:50 IST" duration-ms="423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exitBrowser -->
      </class> <!-- org.test.ProductModule -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
