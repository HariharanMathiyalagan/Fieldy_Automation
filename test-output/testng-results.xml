<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="28" passed="27" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-18T14:48:58 IST" name="Default suite" finished-at="2023-01-18T14:52:35 IST" duration-ms="216491">
    <groups>
    </groups>
    <test started-at="2023-01-18T14:48:58 IST" name="Default test" finished-at="2023-01-18T14:52:35 IST" duration-ms="216491">
      <class name="org.test.GlobalOrganizationRequest">
        <test-method is-config="true" signature="setup()[pri:0, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:48:58 IST" name="setup" finished-at="2023-01-18T14:49:00 IST" duration-ms="2130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginPage()[pri:0, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:49:00 IST" name="loginPage" finished-at="2023-01-18T14:49:58 IST" duration-ms="57533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPage -->
        <test-method signature="requestModule()[pri:1, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:49:58 IST" name="requestModule" finished-at="2023-01-18T14:50:07 IST" duration-ms="9044" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestModule -->
        <test-method signature="organizationMandatoryValidation()[pri:2, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:50:07 IST" name="organizationMandatoryValidation" finished-at="2023-01-18T14:50:14 IST" duration-ms="6999" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Required Field] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Required Field] but found [null]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at org.test.GlobalOrganizationRequest.organizationMandatoryValidation(GlobalOrganizationRequest.java:97)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- organizationMandatoryValidation -->
        <test-method signature="autoCompleteOrganizationCreation()[pri:3, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:50:14 IST" name="autoCompleteOrganizationCreation" finished-at="2023-01-18T14:50:26 IST" duration-ms="11678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- autoCompleteOrganizationCreation -->
        <test-method signature="autoCompleteOrganizationContactCreation()[pri:4, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:50:26 IST" name="autoCompleteOrganizationContactCreation" finished-at="2023-01-18T14:50:38 IST" duration-ms="12069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- autoCompleteOrganizationContactCreation -->
        <test-method signature="maximumValidationTittle()[pri:6, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:50:38 IST" name="maximumValidationTittle" finished-at="2023-01-18T14:50:45 IST" duration-ms="7445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maximumValidationTittle -->
        <test-method signature="mandatoryValidationDescription()[pri:7, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:50:45 IST" name="mandatoryValidationDescription" finished-at="2023-01-18T14:50:45 IST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mandatoryValidationDescription -->
        <test-method signature="maximumValidationDescription()[pri:8, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:50:45 IST" name="maximumValidationDescription" finished-at="2023-01-18T14:50:50 IST" duration-ms="4730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maximumValidationDescription -->
        <test-method signature="maximumTagValidation()[pri:11, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:50:50 IST" name="maximumTagValidation" finished-at="2023-01-18T14:50:51 IST" duration-ms="872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maximumTagValidation -->
        <test-method signature="duplicateTagsValidation()[pri:12, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:50:51 IST" name="duplicateTagsValidation" finished-at="2023-01-18T14:50:51 IST" duration-ms="490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- duplicateTagsValidation -->
        <test-method signature="maxTagLimitValidation()[pri:13, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:50:51 IST" name="maxTagLimitValidation" finished-at="2023-01-18T14:51:02 IST" duration-ms="10638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maxTagLimitValidation -->
        <test-method signature="maximumValidationNotes()[pri:14, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:51:02 IST" name="maximumValidationNotes" finished-at="2023-01-18T14:51:07 IST" duration-ms="4768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maximumValidationNotes -->
        <test-method signature="unsssignedRequest()[pri:15, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:51:07 IST" name="unsssignedRequest" finished-at="2023-01-18T14:51:20 IST" duration-ms="13214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unsssignedRequest -->
        <test-method signature="requestUnassignedStatus()[pri:16, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:51:20 IST" name="requestUnassignedStatus" finished-at="2023-01-18T14:51:22 IST" duration-ms="1696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestUnassignedStatus -->
        <test-method signature="createRequest_FromDateandTime_ToDateandTime()[pri:18, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:51:22 IST" name="createRequest_FromDateandTime_ToDateandTime" finished-at="2023-01-18T14:51:59 IST" duration-ms="37002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRequest_FromDateandTime_ToDateandTime -->
        <test-method signature="requestScheduleStatus()[pri:19, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:51:59 IST" name="requestScheduleStatus" finished-at="2023-01-18T14:52:00 IST" duration-ms="1685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestScheduleStatus -->
        <test-method signature="dispatchedRequest()[pri:20, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:52:00 IST" name="dispatchedRequest" finished-at="2023-01-18T14:52:05 IST" duration-ms="4408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dispatchedRequest -->
        <test-method signature="requestDispatchedStatus()[pri:21, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:52:05 IST" name="requestDispatchedStatus" finished-at="2023-01-18T14:52:05 IST" duration-ms="95" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestDispatchedStatus -->
        <test-method signature="startedRequest()[pri:22, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:52:05 IST" name="startedRequest" finished-at="2023-01-18T14:52:10 IST" duration-ms="4932" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startedRequest -->
        <test-method signature="requestStartedStatus()[pri:23, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:52:10 IST" name="requestStartedStatus" finished-at="2023-01-18T14:52:10 IST" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestStartedStatus -->
        <test-method signature="completedRequest()[pri:24, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:52:10 IST" name="completedRequest" finished-at="2023-01-18T14:52:14 IST" duration-ms="4049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completedRequest -->
        <test-method signature="cancelledRequest()[pri:25, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:52:14 IST" name="cancelledRequest" finished-at="2023-01-18T14:52:18 IST" duration-ms="4077" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cancelledRequest -->
        <test-method signature="requestCancelledStatus()[pri:26, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:52:18 IST" name="requestCancelledStatus" finished-at="2023-01-18T14:52:18 IST" duration-ms="93" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestCancelledStatus -->
        <test-method signature="searchCustomerName()[pri:29, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:52:18 IST" name="searchCustomerName" finished-at="2023-01-18T14:52:21 IST" duration-ms="2649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchCustomerName -->
        <test-method signature="searchRequestNo()[pri:30, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:52:21 IST" name="searchRequestNo" finished-at="2023-01-18T14:52:25 IST" duration-ms="3795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchRequestNo -->
        <test-method signature="searchLocation()[pri:31, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:52:25 IST" name="searchLocation" finished-at="2023-01-18T14:52:28 IST" duration-ms="3311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchLocation -->
        <test-method signature="searchFilterByDate()[pri:32, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:52:28 IST" name="searchFilterByDate" finished-at="2023-01-18T14:52:32 IST" duration-ms="4219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchFilterByDate -->
        <test-method signature="searchInvalid()[pri:33, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:52:32 IST" name="searchInvalid" finished-at="2023-01-18T14:52:34 IST" duration-ms="1769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchInvalid -->
        <test-method is-config="true" signature="exitBrowser()[pri:0, instance:org.test.GlobalOrganizationRequest@17497425]" started-at="2023-01-18T14:52:34 IST" name="exitBrowser" finished-at="2023-01-18T14:52:35 IST" duration-ms="654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exitBrowser -->
      </class> <!-- org.test.GlobalOrganizationRequest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
